package {{beansPackage}};

import java.util.Calendar;
import java.util.List;

import org.hippoecm.hst.content.beans.Node;
import org.hippoecm.hst.content.beans.standard.HippoDocument;
import org.hippoecm.hst.content.beans.standard.HippoHtml;
import org.onehippo.cms7.essentials.components.model.Authors;
import org.onehippo.cms7.essentials.dashboard.annotations.HippoEssentialsGenerated;

@HippoEssentialsGenerated(internalName = "{{namespace}}:blogpost")
@Node(jcrType = "{{namespace}}:blogpost")
public class Blogpost extends HippoDocument implements Authors{

    public static final String TITLE = "{{namespace}}:title";
    public static final String INTRODUCTION = "{{namespace}}:introduction";
    public static final String CONTENT = "{{namespace}}:content";
    public static final String PUBLICATION_DATE = "{{namespace}}:publicationdate";
    public static final String CATEGORIES = "{{namespace}}:categories";
    public static final String AUTHOR = "{{namespace}}:author";
    public static final String AUTHOR_NAMES = "{{namespace}}:authornames";
    public static final String LINK = "{{namespace}}:link";
    public static final String AUTHORS = "{{namespace}}:authors";
    public static final String TAGS = "hippostd:tags";


   @HippoEssentialsGenerated(internalName = "{{namespace}}:publicationdate")
    public Calendar getPublicationDate() {
        return getProperty(PUBLICATION_DATE);
    }

    @HippoEssentialsGenerated(internalName = "{{namespace}}:authornames")
    public String[] getAuthorNames() {
        return getProperty(AUTHOR_NAMES);
    }

    public String getAuthor() {
        final String[] authorNames = getAuthorNames();
        if(authorNames !=null && authorNames.length > 0){
            return authorNames[0];
        }
        return null;
    }


    @HippoEssentialsGenerated(internalName = "{{namespace}}:title")
    public String getTitle() {
        return getProperty(TITLE);
    }

    @HippoEssentialsGenerated(internalName = "{{namespace}}:content")
    public HippoHtml getContent() {
        return getHippoHtml(CONTENT);
    }

    @HippoEssentialsGenerated(internalName = "{{namespace}}:introduction")
    public String getIntroduction() {
        return getProperty(INTRODUCTION);
    }


    @HippoEssentialsGenerated(internalName = "{{namespace}}:link")
    public String getLink() {
        return getProperty(LINK);
    }

    @HippoEssentialsGenerated(internalName = "{{namespace}}:categories")
    public List<String> getCategories() {
        return getProperty(CATEGORIES);
    }

    @Override
    @HippoEssentialsGenerated(internalName = "{{namespace}}:authors")
    public List<Author> getAuthors() {
        return getLinkedBeans(AUTHORS, Author.class);
    }

    @HippoEssentialsGenerated(internalName = "hippostd:tags")
    public String[] getTags() {
        return getProperty(TAGS);
    }

}